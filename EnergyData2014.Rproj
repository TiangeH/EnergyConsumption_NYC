Version: 1.0

RestoreWorkspace: Default
SaveWorkspace: Default
AlwaysSaveHistory: Default

EnableCodeIndexing: Yes
UseSpacesForTab: Yes
NumSpacesForTab: 2
Encoding: UTF-8

RnwWeave: Sweave
LaTeX: pdfLaTeX

#1.import data
nyc_data<-read.csv(file = "C:/Users/Tiange/Desktop/Capstone_Project/nyc_2014_raw.csv",header = T,sep=',')

#install packages and rename the data since many attributes' name is not convenient for us to use
install.packages("gtools")#for quantcut function
library(gtools) #for quantcut
library(sqldf)
library(ggplot2)
library(randomForest)
library(data.table)
library(xgboost)
library(xlsx) #export to excel

#2 Data exploration and restructure
str(nyc_data)
nrow(nyc_data)

#change column name etc
colnames(nyc_data)<-c("RecordNumber",
                      "BBL",
                      "Co_BBLStatus",
                      "BBLsCo_reported",
                      "BIN",
                      "StreetNumber",
                      "StreetName",
                      "Borough",
                      "ZipCode",
                      "BBLontheCoveredBuildingsList",
                      "DOFBenchmarkingSubmissionStatus",
                      "SiteEUI_kBtu_ft2",
                      "WeatherNormalizedSiteEUI_kBtu_ft2","SourceEUIkBtu_ft2",
                      "WeatherNormalizedSourceEUIkBtu_ft2",
                      "MunicipallySuppliedPotableWater_IndoorIntensity_gal_ft",
                      "AutomaticWaterBenchmarkingEligible",
                      "ReportedWaterMethod",
                      "ENERGYSTARScore",
                      "TotalGHGEmissions_MtCO2e",
                      "DirectGHGEmissions_MtCO2e",
                      "IndirectGHGEmissions_MtCO2e",
                      "ReportedPropertyFloorArea_Buildings_ft",
                      "DOFPropertyFloorArea_BuildngsandParking_ft2",
                      "PrimaryPropertyType",
                      "DOFNumberofBuildings")

# since our goal is to predict Energy Star Score, we use summary to see what's inside Energy Star Score column. Some are "Not Available" or "See Primary BBL"
questiondata<-sqldf("select * from nyc_data 
                where ENERGYSTARScore = 'Not Available' 
                or ENERGYSTARScore ='See Primary BBL'
                ")

questiondata[ questiondata == "Not Available" | questiondata == "" ] <- NA

#checking missing value in each row and columns
na_count_row_q<- apply(questiondata, 1, function(x) sum(is.na(x)))
na_count_column_q<- apply(questiondata, 2, function(x) sum(is.na(x)))


#remove those with In Violation because those rwos contains most missing value
nyc_data<-sqldf("select * from nyc_data 
                where DOFBenchmarkingSubmissionStatus != 'In Violation ' 
                and DOFBenchmarkingSubmissionStatus!= 'Not Applicable' 
                and ENERGYSTARScore != 'Not Available' 
                and ENERGYSTARScore!= '0'
                and ENERGYSTARScore!='See Primary BBL'
                ")

#convert factor to numerica, otherwise we can't do further analysis

nyc_data$RecordNumber<-as.numeric(nyc_data$RecordNumber)
nyc_data$SiteEUI_kBtu_ft2<-as.numeric(as.character(nyc_data$SiteEUI_kBtu_ft2))
nyc_data$WeatherNormalizedSiteEUI_kBtu_ft2<-as.numeric(as.character(nyc_data$WeatherNormalizedSiteEUI_kBtu_ft2))
nyc_data$SourceEUIkBtu_ft2<-as.numeric(as.character(nyc_data$SourceEUIkBtu_ft2))
nyc_data$WeatherNormalizedSourceEUIkBtu_ft2<-as.numeric(as.character(nyc_data$WeatherNormalizedSourceEUIkBtu_ft2))
nyc_data$MunicipallySuppliedPotableWater_IndoorIntensity_gal_ft<-as.numeric(as.character(nyc_data$MunicipallySuppliedPotableWater_IndoorIntensity_gal_ft))
nyc_data$ENERGYSTARScore<-as.numeric(as.character(nyc_data$ENERGYSTARScore))
nyc_data$TotalGHGEmissions_MtCO2e<-as.numeric(as.character(nyc_data$TotalGHGEmissions_MtCO2e))
nyc_data$DirectGHGEmissions_MtCO2e<-as.numeric(as.character(nyc_data$DirectGHGEmissions_MtCO2e))
nyc_data$IndirectGHGEmissions_MtCO2e<-as.numeric(as.character(nyc_data$IndirectGHGEmissions_MtCO2e))
nyc_data$ReportedPropertyFloorArea_Buildings_ft<-as.numeric(as.character(nyc_data$ReportedPropertyFloorArea_Buildings_ft))
nyc_data$DOFPropertyFloorArea_BuildngsandParking_ft2<-as.numeric(as.character(nyc_data$DOFPropertyFloorArea_BuildngsandParking_ft2))

#make sure the change don't change numbers
summary(nyc_data$ENERGYSTARScore)
levels(nyc_data$ENERGYSTARScore)

#3 feature selections

#check the Borough
table(nyc_data$Borough)
#names are duplicated, replace them
nyc_data$Borough[nyc_data$Borough == "QUEENS              "] <- "QUEENS"
ggplot(nyc_data) + geom_density(aes(x = ENERGYSTARScore, fill =Borough), alpha = 0.2)

#check the primary building type
ggplot(nyc_data) + geom_density(aes(x = ENERGYSTARScore, fill =PrimaryPropertyType), alpha = 0.2)

nyc_data<-subset(nyc_data,PrimaryPropertyType=="Multifamily Housing" 
                 | PrimaryPropertyType == "Office"
                 | PrimaryPropertyType == "Hotel"
                 | PrimaryPropertyType == "Non-Refrigerated Warehouse"
                 | PrimaryPropertyType == "Residence Hall/Dormitory"
                 | PrimaryPropertyType == "Senior Care Community"
                 | PrimaryPropertyType == "Retail Store" 
                 | PrimaryPropertyType == "K-12 School" 
                 | PrimaryPropertyType == "Distribution Center" 
                 | PrimaryPropertyType == "Hospital (General Medical & Surgical)")

#we decide to only keep the top 10 building usage in our data

#as we can see, a lot attributes are highly correlated with each other. For example
#siteEUi and WeatherNormalizedSiteEui.Based on the defiinition on BenchLaw84
#weatherNormalizeSiteEui represent the mean of siteEUi when weather change.
#however, it may not has huge effect for large size building. 
#since then, we have two methods to deal with these.
#As we checked, we have a lot missing WeatherNormalizedSite and WeatherNormalizedSourceEUI
#1 method is remove WeaNormSour and WeaNorSit EUi form our frame
#2 is replace missing vlaue in WeaNormSour and WeaNorSit by site and sourceEUI.

cor.test(nyc_data$SiteEUI_kBtu_ft2,nyc_data$WeatherNormalizedSiteEUI_kBtu_ft2)
#there is 99.99% correlation between SiteEUI and WeatherNormalizeSite EUI
#if we use the summary or quantcut function, we can find that 1/3 of data
#has site EUI larger than 107, we will seperate them and compare correlationship
#between SiteEUI and WeatherNormalizedSiteEUI

plot(nn_s_107$SiteEUI_kBtu_ft2, nn_s_107$WeatherNormalizedSiteEUI_kBtu_ft2, main="SiteEUI&WeatherNormalizedSiteEui", 
     xlab="SiteEUI ", 
     ylab="WeatherNormalizedSiteEUI ",col=c("green","blue"), pch=19) 

#we use the same method to do that with SourceEUI

nn_l_107<-nyc_data[(nyc_data[,14]>107),]
nn_s_107<-nyc_data[(nyc_data[,14]<=107),]

plot(nn_s_107$SourceEUIkBtu_ft2, nn_s_107$WeatherNormalizedSourceEUIkBtu_ft2, main="SourceEUI&WeatherNormalizedSourceEui", 
     xlab="SourceEUI ", 
     ylab="WeatherNormalizedSourceEUI ",col=c("green","blue"), pch=19)

#I chose the first method

#then we compare SiteEUI and SourceEUI
plot(nn_s_107$SiteEUI_kBtu_ft2, nn_s_107$SourceEUIkBtu_ft2, main="SiteEUI&SourceEui", 
     xlab="SiteEUI ", 
     ylab="SourceEUI ", pch=19)



# final step, only keep attributes that we need to use

nn<-sqldf("select 
          ENERGYSTARScore,
          SiteEUI_kBtu_ft2,
          TotalGHGEmissions_MtCO2e,
          ReportedPropertyFloorArea_Buildings_ft, 
          PrimaryPropertyType,
          Borough
          from nyc_data 
          where
          and SiteEUI_kBtu_ft2 >= 70 and SiteEUI_kBtu_ft2 <=107
          and TotalGHGEmissions_MtCO2e >=369 and TotalGHGEmissions_MtCO2e <= 1006
          and ReportedPropertyFloorArea_Buildings_ft >=67870 and ReportedPropertyFloorArea_Buildings_ft<= 166503")




